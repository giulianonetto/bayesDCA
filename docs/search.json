[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/survival-outcomes.html","id":"interrogating-the-output","dir":"Articles","previous_headings":"","what":"Interrogating the output","title":"Survival outcomes","text":"can kinds output interrogation just like binary outcomes.","code":""},{"path":"/articles/survival-outcomes.html","id":"what-is-the-best-decision-strategy","dir":"Articles","previous_headings":"Interrogating the output","what":"What is the best decision strategy?","title":"Survival outcomes","text":"","code":"compare_dca(fit)"},{"path":"/articles/survival-outcomes.html","id":"are-the-prediction-model-or-the-binary-test-useful-at-all","dir":"Articles","previous_headings":"Interrogating the output","what":"Are the prediction model or the binary test useful at all?","title":"Survival outcomes","text":"","code":"compare_dca(fit, type = \"useful\")"},{"path":"/articles/survival-outcomes.html","id":"is-the-model-better-than-the-test","dir":"Articles","previous_headings":"Interrogating the output","what":"Is the model better than the test?","title":"Survival outcomes","text":"","code":"compare_dca(fit,              strategies = c(\"model_predictions\", \"binary_test\"),              type = \"pairwise\")"},{"path":"/articles/survival-outcomes.html","id":"what-is-the-price-of-uncertainty","dir":"Articles","previous_headings":"Interrogating the output","what":"What is the price of uncertainty?","title":"Survival outcomes","text":"","code":"compare_dca(fit, .evpi = TRUE)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Giuliano Netto Flores Cruz. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cruz, GNF (2022). Bayesian Decision Curve Analysis bayesDCA. R package version 0.0.0.9000. URL https://giulianonetto.github.io/bayesdca.","code":"@Manual{,   title = {Bayesian Decision Curve Analysis with {bayesDCA}},   author = {Giuliano Netto Flores Cruz},   year = {2022},   url = {https://giulianonetto.github.io/bayesdca/},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"bayesdca","dir":"","previous_headings":"","what":"Bayesian Decision Curve Analysis","title":"Bayesian Decision Curve Analysis","text":"Perform Bayesian Decision Curve Analysis clinical prediction models diagnostic tests. validating clinical prediction model, may end AUC 0.79 slight miscalibration. know good enough model clinically useful? question can asked , instance, binary diagnostic test sensitivity 75% specificity 68%. Decision Curve Analysis helps us find answer - see Vickers, van Calster & Steyerberg, 2019 introduction DCA. , use Bayesian methods accurately quantify uncertainty decisions curves - powered Stan.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Decision Curve Analysis","text":"can install development version bayesDCA GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"giulianonetto/bayesdca\")"},{"path":"/index.html","id":"running-bayesian-dca","dir":"","previous_headings":"","what":"Running Bayesian DCA","title":"Bayesian Decision Curve Analysis","text":"can use bayesDCA evaluate predictive models well binary tests. need data.frame column named outcomes (0 1) one column model test evaluated. example , PredModelData includes probability predictions model (\"predictions\" column) results binary test (\"binary_test\" column). names columns don’t matter (except outcomes column, always present). Run DCA :","code":"library(bayesDCA) data(PredModelData) head(PredModelData) #>   outcomes predictions binary_test #> 1        0  0.01280653           0 #> 2        0  0.13981948           0 #> 3        0  0.03566458           0 #> 4        0  0.02351731           0 #> 5        0  0.00863298           0 #> 6        0  0.00959754           0 fit <- dca(PredModelData) plot(fit)"},{"path":"/index.html","id":"interpreting-bayesian-dca","dir":"","previous_headings":"","what":"Interpreting Bayesian DCA","title":"Bayesian Decision Curve Analysis","text":"decision curve represents predictive performance decision strategy – yes, treating (none) valid decision strategy. Given estimated decision curves, may want ask several questions, : best decision strategy? strategies based predictive models tests useful ? predictive model guaranteed better binary test? consequence uncertainty imposed available data? bayesDCA R package provides easy workflow answering questions. particular, “DCA part” Bayesian DCA allows answering first three questions; adding “Bayesian part” allows quantifying uncertainty around answers. best decision strategy one maximizes observed net benefit. However, uncertainty large, data may necessary increase confidence conclusions. fourth question directly quantifies might lose, terms net benefit, drawing conclusions current level uncertainty.","code":""},{"path":"/index.html","id":"what-is-the-best-decision-strategy","dir":"","previous_headings":"","what":"What is the best decision strategy?","title":"Bayesian Decision Curve Analysis","text":"Say want infer best decision strategy among prediction model, binary test, default strategies (treat /none). can compare decision curves:  decision thresholds, model predictions maximize observed net benefit (.e., highest posterior means) hence best decision strategy given available data. However, notice uncertainty quite large least thresholds 30%, conclusions might noisy data beneficial.","code":"compare_dca(fit, type = \"best\")"},{"path":"/index.html","id":"are-the-prediction-model-or-the-binary-test-useful-at-all","dir":"","previous_headings":"","what":"Are the prediction model or the binary test useful at all?","title":"Bayesian Decision Curve Analysis","text":"Well, maybe everyone access prediction model binary test. useful ? , “useful” means better default strategies (treat /none), following definition Wynants et al. (2018).","code":"compare_dca(fit, type = \"useful\")"},{"path":"/index.html","id":"is-the-model-better-than-the-test","dir":"","previous_headings":"","what":"Is the model better than the test?","title":"Bayesian Decision Curve Analysis","text":"can also pairwise comparisons specifying pair strategies want compare models_or_tests argument (set single value compare default strategies).","code":"compare_dca(fit,              strategies = c(\"predictions\", \"binary_test\"),              type = \"pairwise\")"},{"path":"/index.html","id":"what-is-the-consequence-of-uncertainty","dir":"","previous_headings":"","what":"What is the consequence of uncertainty?","title":"Bayesian Decision Curve Analysis","text":"answer , need estimate Expected Value Perfect Information (EVPI) model validation defined Sadatsafavi et al. (2022). may think price consequence uncertainty. Since sample dataset, don’t know sure best decision strategy threshold. EVPI quantifies expected loss net benefit associated uncertainty. high given threshold, greatly benefit data validate decision strategies.  Notice EVPI follows closely uncertainty around best strategy: larger uncertainty, expected benefit accessing “perfect information”.","code":"compare_dca(fit, .evpi = TRUE)"},{"path":"/index.html","id":"using-external-information-to-estimate-prevalence","dir":"","previous_headings":"","what":"Using external information to estimate prevalence","title":"Bayesian Decision Curve Analysis","text":"Say validating tests using nested case-control study, prevalence parameter must come larger sample cases controls selected. Another example want use external estimate prevalence (say large prospective cross-sectional study). can passing external_prevalence_data argument dca.  Notice also external_prevalence_data information used estimate prevalence, used net benefit calculation. Sensitivity specificity use original information PredModelData.","code":"fit <- dca(PredModelData,            external_prevalence_data = c(100, 500)) plot(fit)"},{"path":"/reference/Docking2021Data.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival data from Docking, 2021 - Figures 3B-3E — Docking2021Data","title":"Survival data from Docking, 2021 - Figures 3B-3E — Docking2021Data","text":"dataset containing survival data Docking, 2021. Dataset includes selected data used Figures 3B 3E. Observations missing survival time (weeks) missing survival events excluded. AML prognostic score (APS) values kept example continuous biomarker.","code":""},{"path":"/reference/Docking2021Data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival data from Docking, 2021 - Figures 3B-3E — Docking2021Data","text":"","code":"Docking2021Data"},{"path":"/reference/Docking2021Data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survival data from Docking, 2021 - Figures 3B-3E — Docking2021Data","text":"data frame 635 rows 5 variables: fig_id Character indicating corresponding figure original paper. aps_lasso_score APS value aps_lasso_class APS tercile computed within study cohort. survival_event Death 1, censored/slive 0. survival_weeks Overall survival weeks.","code":""},{"path":"/reference/Docking2021Data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survival data from Docking, 2021 - Figures 3B-3E — Docking2021Data","text":"https://giulianonetto.github.io/bayesdca/","code":""},{"path":"/reference/PredModelData.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictive Model Evaluation Data. — PredModelData","title":"Predictive Model Evaluation Data. — PredModelData","text":"dataset containing outcomes (0 1), probability predictions example model, results example binary test. Binary test generated using sensitivity specificity 80%. Based rmda::dcaData.","code":""},{"path":"/reference/PredModelData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictive Model Evaluation Data. — PredModelData","text":"","code":"PredModelData"},{"path":"/reference/PredModelData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Predictive Model Evaluation Data. — PredModelData","text":"data frame 500 rows 3 variables: outcomes binary outcomes (0 1, int.) predictions predicted probabilities (num.) binary_test binary test results (0 1, int.)","code":""},{"path":"/reference/PredModelData.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predictive Model Evaluation Data. — PredModelData","text":"https://giulianonetto.github.io/bayesdca/","code":""},{"path":"/reference/bayesDCA-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'bayesDCA' package. — bayesDCA-package","title":"The 'bayesDCA' package. — bayesDCA-package","text":"DESCRIPTION PACKAGE","code":""},{"path":"/reference/bayesDCA-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The 'bayesDCA' package. — bayesDCA-package","text":"Stan Development Team (2020). RStan: R interface Stan. R package version 2.21.2. https://mc-stan.org","code":""},{"path":"/reference/compare_dca.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot BayesDCA comparison — compare_dca","title":"Plot BayesDCA comparison — compare_dca","text":"Plot BayesDCA comparison","code":""},{"path":"/reference/compare_dca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot BayesDCA comparison — compare_dca","text":"","code":"compare_dca(   obj,   strategies = NULL,   colors = NULL,   labels = NULL,   plot_list = FALSE,   .evpi = FALSE,   type = c(\"best\", \"useful\", \"pairwise\"),   linewidth = 1.5,   ... )"},{"path":"/reference/compare_dca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot BayesDCA comparison — compare_dca","text":"obj BayesDCA BayesDCASurv object strategies Character vector models tests plot. null, compares either first two obj$strategies first one Treat /none (one available). colors Named vector color model test. provided subset models tests, subset plotted. labels Named vector label model test. plot_list TRUE, returns list separate ggplot objects. .evpi TRUE, adds validation EVPI plots -- see Sadatsafavi et al. (2020)(see https://arxiv.org/abs/2208.03343). type One \"best\", \"useful\", \"pairwise\". linewidth Width plotted lines.","code":""},{"path":"/reference/compare_dca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot BayesDCA comparison — compare_dca","text":"patchwork/ggplot object list ggplot objects.","code":""},{"path":"/reference/compare_dca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot BayesDCA comparison — compare_dca","text":"","code":"data(PredModelData) fit <- dca(PredModelData) compare_dca(fit)"},{"path":"/reference/dca.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Decision Curve Analysis for Predictive Models and Binary tests — dca","title":"Bayesian Decision Curve Analysis for Predictive Models and Binary tests — dca","text":"Estimate decision curves list predictive models /binary tests . Necessary make comparative inferences across multiple models tests using corresponding posterior draws.","code":""},{"path":"/reference/dca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Decision Curve Analysis for Predictive Models and Binary tests — dca","text":"","code":"dca(   .data,   thresholds = seq(0, 0.5, length = 51),   prior_p = NULL,   prior_se = NULL,   prior_sp = NULL,   priors = NULL,   threshold_varying_prior = FALSE,   ignorance_region_cutpoints = c(0.25, 0.75) * max(thresholds),   min_sens_prior_mean = 0.01,   max_sens_prior_mean = 0.99,   max_sens_prior_sample_size = 5,   ignorance_region_mean = 0.5,   ignorance_region_sample_size = 2,   prev_prior_mean = 0.5,   prev_prior_sample_size = 2,   summary_probs = c(0.025, 0.975),   external_prevalence_data = NULL,   prior_only = FALSE,   n_draws = 4000 )"},{"path":"/reference/dca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Decision Curve Analysis for Predictive Models and Binary tests — dca","text":".data data.frame outcomes column (0 1 individual) one columns predicted probabilities desired list predictive models, 0 1 indicator desired list binary tests. thresholds Numeric vector probability thresholds net benefit computed (default seq(0, 0.5, length = 51)). prior_p, prior_se, prior_sp Non-negative shape values Beta(alpha, beta) priors used p, Se, Sp, respectively. Default uniform prior parameters - Beta(1, 1). single vector form c(, b) can provided . priors list threshold- model-specific priors contain vector shape1 prevalence (named p1) shape2 (named p2). Similarly Se1/Se2 Sp1/Sp2, except matrices many rows thresholds many columns models tests. summary_probs Probabilities used compute credible intervals (defaults 95% Cr..). external_prevalence_data Vector two positive integers giving number diseased non-diseased individuals, respectively, external data (e.g., analyzing nested case-control data, number cases non-cases source population). prior_only set TRUE, produce prior DCA. keep_fit Logical indicating whether keep stanfit output (default FALSE). keep_draws Logical indicating whether keep posterior draws stanfit object (default TRUE). constant_prior TRUE (default), set single prior models tests thresholds. FALSE, prior threshold , potentially, model/test-specific. min_prior_mean, max_prior_mean Minimum maximum prior mean sensitivity specificity. used constant_prior = FALSE. refresh Control verbosity rstan::sampling (check help page details).","code":""},{"path":"/reference/dca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Decision Curve Analysis for Predictive Models and Binary tests — dca","text":"object class BayesDCA","code":""},{"path":"/reference/dca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Decision Curve Analysis for Predictive Models and Binary tests — dca","text":"","code":"data(PredModelData) fit <- dca(PredModelData) plot(fit)"},{"path":"/reference/dca_surv.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Decision Curve Analysis\nfor Survival outcomes — dca_surv","title":"Bayesian Decision Curve Analysis\nfor Survival outcomes — dca_surv","text":"Bayesian Decision Curve Analysis Survival outcomes","code":""},{"path":"/reference/dca_surv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Decision Curve Analysis\nfor Survival outcomes — dca_surv","text":"","code":"dca_surv(   .data,   prediction_time,   thresholds = seq(0, 0.5, length = 51),   keep_draws = TRUE,   keep_fit = FALSE,   summary_probs = c(0.025, 0.975),   positivity_prior = c(1, 1),   shape_prior = c(\"student\", \"gamma\"),   scale_prior = c(\"student\", \"gamma\"),   shape_prior_pars = c(10, 0, 1.5),   scale_prior_pars = c(30, 0, 100),   prior_only = FALSE,   iter = 4000,   refresh = 0,   ... )"},{"path":"/reference/dca_surv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Decision Curve Analysis\nfor Survival outcomes — dca_surv","text":".data dataframe whose first column named \"outcomes\" survival::Surv object remaining columns decision strategies assess. prediction_time Prediction time horizon (e.g., models predict risk death one year data year, prediction_time 1.) thresholds Decision thresholds -- within interval (0, 1). keep_draws true, posterior draws kept output object. keep_fit true, stanfit object kept output object. summary_probs Probabilities posterior credible intervals (defaults 95% Cr..). positivity_prior Shape parameters prior positivity probability. shape_prior type prior distribution shape parameter Weibull distribution. Either \"student\" \"gamma\". scale_prior type prior distribution scale parameter Weibull distribution. Either \"student\" \"gamma\". shape_prior_pars vector prior parameters prior shape Weibull distribution. shape_prior=\"student\", vector length 3 degrees freedom, mean, scale, respectively; shape_prior=\"gamma\", vector length 2 shape rate, respectively. prior_only TRUE, samples prior . iter Passed rstan::sampling. Number iterations/draws Stan. refresh Controls verbosity rstan::sampling ... Arguments passed rstan::sampling (e.g. iter, chains).  # nolint","code":""},{"path":"/reference/dca_surv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Decision Curve Analysis\nfor Survival outcomes — dca_surv","text":"object class BayesDCASurv","code":""},{"path":"/reference/dca_surv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Decision Curve Analysis\nfor Survival outcomes — dca_surv","text":"","code":"if (FALSE) { data(dca_survival_data) fit <- dca_surv(dca_survival_data, prediction_time = 1, iter = 1000, chains = 1) plot(fit) }"},{"path":"/reference/dca_survival_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Data for Bayesian DCA. — dca_survival_data","title":"Survival Data for Bayesian DCA. — dca_survival_data","text":"dataset containing time--event outcomes (survival::Surv object), predictions prognostic model, results binary prognostic test. Based dcurves::df_surv. intended time horizon prediction exactly 1.","code":""},{"path":"/reference/dca_survival_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Data for Bayesian DCA. — dca_survival_data","text":"","code":"dca_survival_data"},{"path":"/reference/dca_survival_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survival Data for Bayesian DCA. — dca_survival_data","text":"data frame 500 rows 3 variables: outcomes survival outcomes (survival::Surv object) model_predictions predicted probabilities event (time 1). binary_test binary prognostic test results (0 1, int.)","code":""},{"path":"/reference/dca_survival_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survival Data for Bayesian DCA. — dca_survival_data","text":"https://giulianonetto.github.io/bayesdca/","code":""},{"path":"/reference/dot-dca_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bayesian Decision Curve Analysis using\nStan for list of models or binary tests — .dca_binary","title":"Fit Bayesian Decision Curve Analysis using\nStan for list of models or binary tests — .dca_binary","text":"Fit Bayesian Decision Curve Analysis using Stan list models binary tests","code":""},{"path":"/reference/dot-dca_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bayesian Decision Curve Analysis using\nStan for list of models or binary tests — .dca_binary","text":"","code":".dca_binary(   n_thr,   strategies,   N,   d,   tp,   tn,   thresholds,   prior_p1,   prior_p2,   prior_Se1,   prior_Se2,   prior_Sp1,   prior_Sp2,   N_ext = 0,   d_ext = 0,   n_draws = 4000 )"},{"path":"/reference/dot-dca_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bayesian Decision Curve Analysis using\nStan for list of models or binary tests — .dca_binary","text":"n_thr Number thresholds (int.). N Sample size (vector integers length n_thr). d Diseased: number diseased persons events (vector integers length n_thr). tp True Positives: number diseased persons correctly identified diagnostic test prediction model (matrix integers size n_thr n_strategies). tn True Negatives: number diseased persons correctly identified diagnostic test prediction model (matrix integers size n_thr n_strategies). thresholds Numeric vector probability thresholds net benefit computed (default seq(0.01, 0.5, 0.01)). N_ext, d_ext External sample size number diseased individuals (cases), respectively, used adjust prevalence. n_strategies Number models binary tests (int.). prior_p, prior_se, prior_sp Prior parameters prevalence, sensitivity, specificity (numeric matrices size n_thr n_strategies). refresh Control verbosity rstan::sampling. ... Arguments passed rstan::sampling (e.g. iter, chains).","code":""},{"path":"/reference/dot-dca_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Bayesian Decision Curve Analysis using\nStan for list of models or binary tests — .dca_binary","text":"object class stanfit returned rstan::sampling (e.g. iter, chains)","code":""},{"path":"/reference/dot-dca_stan_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bayesian Decision Curve Analysis using Stan for list of models or binary tests — .dca_stan_list","title":"Fit Bayesian Decision Curve Analysis using Stan for list of models or binary tests — .dca_stan_list","text":"Fit Bayesian Decision Curve Analysis using Stan list models binary tests","code":""},{"path":"/reference/dot-dca_stan_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bayesian Decision Curve Analysis using Stan for list of models or binary tests — .dca_stan_list","text":"","code":".dca_stan_list(   n_thr,   n_models_or_tests,   N,   d,   tp,   tn,   thresholds,   prior_p1,   prior_p2,   prior_Se1,   prior_Se2,   prior_Sp1,   prior_Sp2,   N_ext,   d_ext,   other_models_indices,   refresh = 0,   ... )"},{"path":"/reference/dot-dca_stan_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bayesian Decision Curve Analysis using Stan for list of models or binary tests — .dca_stan_list","text":"n_thr Number thresholds (int.). n_models_or_tests Number models binary tests (int.). N Sample size (vector integers length n_thr). d Diseased: number diseased persons events (vector integers length n_thr). tp True Positives: number diseased persons correctly identified diagnostic test prediction model (matrix integers size n_thr n_models_or_tests). tn True Negatives: number diseased persons correctly identified diagnostic test prediction model (matrix integers size n_thr n_models_or_tests). thresholds Numeric vector probability thresholds net benefit computed (default seq(0.01, 0.5, 0.01)). N_ext, d_ext External sample size number diseased individuals (cases), respectively, used adjust prevalence. refresh Control verbosity rstan::sampling. ... Arguments passed rstan::sampling (e.g. iter, chains). prior_p, prior_se, prior_sp Prior parameters prevalence, sensitivity, specificity (numeric matrices size n_thr n_models_or_tests).","code":""},{"path":"/reference/dot-dca_stan_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Bayesian Decision Curve Analysis using Stan for list of models or binary tests — .dca_stan_list","text":"object class stanfit returned rstan::sampling (e.g. iter, chains)","code":""},{"path":"/reference/dot-dca_stan_surv.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bayesian Decision Curve Analysis using Stan for survival outcomes — .dca_stan_surv","title":"Fit Bayesian Decision Curve Analysis using Stan for survival outcomes — .dca_stan_surv","text":"Fit Bayesian Decision Curve Analysis using Stan survival outcomes","code":""},{"path":"/reference/dot-dca_stan_surv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bayesian Decision Curve Analysis using Stan for survival outcomes — .dca_stan_surv","text":"","code":".dca_stan_surv(   n_thr,   n_models_or_tests,   n_intervals,   thresholds,   time_exposed,   posterior_alpha,   posterior_beta,   posterior_alpha0,   posterior_beta0,   pos_post1,   pos_post2,   other_models_indices,   refresh = 0,   ... )"},{"path":"/reference/dot-dca_stan_surv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bayesian Decision Curve Analysis using Stan for survival outcomes — .dca_stan_surv","text":"refresh Control verbosity rstan::sampling. ... Arguments passed rstan::sampling (e.g. iter, chains).","code":""},{"path":"/reference/dot-dca_stan_surv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Bayesian Decision Curve Analysis using Stan for survival outcomes — .dca_stan_surv","text":"object class stanfit returned rstan::sampling (e.g. iter, chains)","code":""},{"path":"/reference/dot-dca_stan_surv_weibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bayesian Decision Curve Analysis\nusing Stan for survival outcomes (Weibull model) — .dca_stan_surv_weibull","title":"Fit Bayesian Decision Curve Analysis\nusing Stan for survival outcomes (Weibull model) — .dca_stan_surv_weibull","text":"Fit Bayesian Decision Curve Analysis using Stan survival outcomes (Weibull model)","code":""},{"path":"/reference/dot-dca_stan_surv_weibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bayesian Decision Curve Analysis\nusing Stan for survival outcomes (Weibull model) — .dca_stan_surv_weibull","text":"","code":".dca_stan_surv_weibull(   sample_size,   n_thr,   n_strategies,   event_times_stacked,   censored_times_stacked,   n_event_times_stacked,   n_censored_times_stacked,   event_times_start_positions,   censored_times_start_positions,   event_times_sizes,   censored_times_sizes,   prediction_time,   thresholds,   pos_post1,   pos_post2,   total_event_times,   total_censored_times,   event_times_marginal,   censored_times_marginal,   other_models_indices,   prior_only,   shape_prior,   scale_prior,   shape_prior_pars,   scale_prior_pars,   iter = 2000,   refresh = 0,   ... )"},{"path":"/reference/dot-dca_stan_surv_weibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bayesian Decision Curve Analysis\nusing Stan for survival outcomes (Weibull model) — .dca_stan_surv_weibull","text":"refresh Control verbosity rstan::sampling.  # nolint ... Arguments passed rstan::sampling (e.g. iter, chains).  # nolint","code":""},{"path":"/reference/dot-dca_stan_surv_weibull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Bayesian Decision Curve Analysis\nusing Stan for survival outcomes (Weibull model) — .dca_stan_surv_weibull","text":"object class stanfit returned rstan::sampling (e.g. iter, chains)  # nolint","code":""},{"path":"/reference/dot-extract_dca_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Get posterior draws from DCA stanfit — .extract_dca_draws","title":"Get posterior draws from DCA stanfit — .extract_dca_draws","text":"Get posterior draws DCA stanfit","code":""},{"path":"/reference/dot-extract_dca_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get posterior draws from DCA stanfit — .extract_dca_draws","text":"","code":".extract_dca_draws(fit, model_or_test_names)"},{"path":"/reference/dot-extract_dca_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get posterior draws from DCA stanfit — .extract_dca_draws","text":"fit stanfit object. model_or_test_names Vector names models binary tests assessment.","code":""},{"path":"/reference/dot-extract_dca_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get summary from BayesDCA fit — .extract_dca_summary","title":"Get summary from BayesDCA fit — .extract_dca_summary","text":"Get summary BayesDCA fit","code":""},{"path":"/reference/dot-extract_dca_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get summary from BayesDCA fit — .extract_dca_summary","text":"","code":".extract_dca_summary(fit, strategies, summary_probs, thresholds)"},{"path":"/reference/dot-extract_dca_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get summary from BayesDCA fit — .extract_dca_summary","text":"fit stanfit object. strategies Vector names models binary tests assessment. summary_probs Numeric vector giving probabilities credible interval. thresholds Vector thresholds DCA.","code":""},{"path":"/reference/dot-extract_dca_surv_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Get posterior draws from time-to-event DCA stanfit — .extract_dca_surv_draws","title":"Get posterior draws from time-to-event DCA stanfit — .extract_dca_surv_draws","text":"Get posterior draws time--event DCA stanfit","code":""},{"path":"/reference/dot-extract_dca_surv_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get posterior draws from time-to-event DCA stanfit — .extract_dca_surv_draws","text":"","code":".extract_dca_surv_draws(fit, strategies)"},{"path":"/reference/dot-extract_dca_surv_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get posterior draws from time-to-event DCA stanfit — .extract_dca_surv_draws","text":"fit stanfit object. strategies Vector names models binary tests assessment.","code":""},{"path":"/reference/dot-extract_dca_surv_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract posterior summaries for BayesDCASurv object — .extract_dca_surv_summary","title":"Extract posterior summaries for BayesDCASurv object — .extract_dca_surv_summary","text":"Extract posterior summaries BayesDCASurv object","code":""},{"path":"/reference/dot-extract_dca_surv_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract posterior summaries for BayesDCASurv object — .extract_dca_surv_summary","text":"","code":".extract_dca_surv_summary(fit, summary_probs, thresholds, strategies)"},{"path":"/reference/dot-extract_dca_surv_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract posterior summaries for BayesDCASurv object — .extract_dca_surv_summary","text":"summary_probs Probabilities posterior credible intervals (defaults 95% Cr..). thresholds Decision thresholds -- within interval (0, 1). strategies Vector names models binary tests assessment.","code":""},{"path":"/reference/dot-extract_dca_surv_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract posterior summaries for BayesDCASurv object — .extract_dca_surv_summary","text":"object class BayesDCASurv","code":""},{"path":"/reference/dot-get_constant_prior_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get constant priors for Bayesian DCA — .get_constant_prior_parameters","title":"Get constant priors for Bayesian DCA — .get_constant_prior_parameters","text":"Get constant priors Bayesian DCA","code":""},{"path":"/reference/dot-get_constant_prior_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get constant priors for Bayesian DCA — .get_constant_prior_parameters","text":"","code":".get_constant_prior_parameters(   n_thresholds,   n_strategies,   prior_p = NULL,   prior_se = NULL,   prior_sp = NULL )"},{"path":"/reference/dot-get_constant_prior_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get constant priors for Bayesian DCA — .get_constant_prior_parameters","text":"n_thresholds Number thresholds (int.). n_strategies Number models tests (int.). prior_p, prior_se, prior_sp Non-negative shape values Beta(alpha, beta) priors used p, Se, Sp, respectively. Default uniform prior parameters - Beta(1, 1). single vector form c(, b) can provided .","code":""},{"path":"/reference/dot-get_nonconstant_prior_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get threshold- and model-specific priors for Bayesian DCA — .get_nonconstant_prior_parameters","title":"Get threshold- and model-specific priors for Bayesian DCA — .get_nonconstant_prior_parameters","text":"Get threshold- model-specific priors Bayesian DCA","code":""},{"path":"/reference/dot-get_nonconstant_prior_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get threshold- and model-specific priors for Bayesian DCA — .get_nonconstant_prior_parameters","text":"","code":".get_nonconstant_prior_parameters(   thresholds,   n_models_or_tests,   shift = 0.45,   slope = 0.025,   prior_sample_size = NULL,   min_prior_sample_size = 20,   max_prior_sample_size = 100,   slope_prior_sample_size = 300,   prior_p = NULL,   min_mean_se = 0.1,   max_mean_se = 0.9,   min_mean_sp = 0.1,   max_mean_sp = 0.9 )"},{"path":"/reference/dot-get_nonconstant_prior_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get threshold- and model-specific priors for Bayesian DCA — .get_nonconstant_prior_parameters","text":"n_models_or_tests Number models tests (int.). prior_sample_size Prior sample size strength. min_prior_sample_size Minimum prior sample size strength. max_prior_sample_size Maximum prior sample size strength. slope_prior_sample_size Rate change prior sample size strength. prior_p, prior_se, prior_sp Non-negative shape values Beta(alpha, beta) priors used p, Se, Sp, respectively. Default uniform prior parameters - Beta(1, 1). single vector form c(, b) can provided . min_mean_se, min_mean_sp, max_mean_se, max_mean_se Minimum maximum prior mean sensitivity (se) specificity (sp). n_thresholds Number thresholds (int.).","code":""},{"path":"/reference/dot-get_prior_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get priors for Bayesian DCA — .get_prior_parameters","title":"Get priors for Bayesian DCA — .get_prior_parameters","text":"Get priors Bayesian DCA","code":""},{"path":"/reference/dot-get_prior_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get priors for Bayesian DCA — .get_prior_parameters","text":"","code":".get_prior_parameters(   thresholds,   threshold_varying_prior = FALSE,   n_strategies = NULL,   prior_p = NULL,   prior_se = NULL,   prior_sp = NULL,   ignorance_region_cutpoints = c(0.25, 0.75) * max(thresholds),   min_sens_prior_mean = 0.01,   max_sens_prior_mean = 0.99,   max_sens_prior_sample_size = 5,   ignorance_region_mean = 0.5,   ignorance_region_sample_size = 2,   prev_prior_mean = 0.5,   prev_prior_sample_size = 2 )"},{"path":"/reference/dot-get_prior_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get priors for Bayesian DCA — .get_prior_parameters","text":"thresholds Vector decision thresholds. shift Scalar controlling height prior Specificity curve. used constant=FALSE. slope Scalar controlling shape prior Specificity curve. used constant=FALSE. min_mean_se, min_mean_sp, max_mean_se, max_mean_se Minimum prior_sample_size Prior sample size strength. min_prior_sample_size Minimum prior sample size strength. max_prior_sample_size Maximum prior sample size strength. slope_prior_sample_size Rate change prior sample size strength. maximum prior mean sensitivity (se) specificity (sp).","code":""},{"path":"/reference/dot-get_relevant_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get relevant parameters to parse from Stan output (BayesDCASurv) — .get_relevant_pars","title":"Get relevant parameters to parse from Stan output (BayesDCASurv) — .get_relevant_pars","text":"Get relevant parameters parse Stan output (BayesDCASurv)","code":""},{"path":"/reference/dot-get_relevant_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get relevant parameters to parse from Stan output (BayesDCASurv) — .get_relevant_pars","text":"","code":".get_relevant_pars()"},{"path":"/reference/dot-get_thr_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Threshold Performance Data for DCA list — .get_thr_data_list","title":"Get Threshold Performance Data for DCA list — .get_thr_data_list","text":"Get Threshold Performance Data DCA list","code":""},{"path":"/reference/dot-get_thr_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Threshold Performance Data for DCA list — .get_thr_data_list","text":"","code":".get_thr_data_list(   .data,   thresholds = seq(0.01, 0.5, 0.01),   prior_only = FALSE )"},{"path":"/reference/dot-get_thr_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Threshold Performance Data for DCA list — .get_thr_data_list","text":".data data.frame outcomes column (0 1 individual) one columns predicted probabilities desired list predictive models, 0 1 indicator desired list binary tests. thresholds Decision thresholds. prior_only TRUE, returns prior (ignores data).","code":""},{"path":"/reference/dot-get_threshold_varying_prior_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get threshold-varying priors for Bayesian DCA — .get_threshold_varying_prior_parameters","title":"Get threshold-varying priors for Bayesian DCA — .get_threshold_varying_prior_parameters","text":"Get threshold-varying priors Bayesian DCA","code":""},{"path":"/reference/dot-get_threshold_varying_prior_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get threshold-varying priors for Bayesian DCA — .get_threshold_varying_prior_parameters","text":"","code":".get_threshold_varying_prior_parameters(   thresholds,   n_strategies,   ignorance_region_cutpoints = c(0.25, 0.75) * max(thresholds),   min_sens_prior_mean = 0.01,   max_sens_prior_mean = 0.99,   max_sens_prior_sample_size = 5,   ignorance_region_mean = 0.5,   ignorance_region_sample_size = 2,   prev_prior_mean = 0.5,   prev_prior_sample_size = 2 )"},{"path":"/reference/evpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Expected Value of Perfect Information (EVPI) — evpi","title":"Compute Expected Value of Perfect Information (EVPI) — evpi","text":"Compute Expected Value Perfect Information (EVPI)","code":""},{"path":"/reference/evpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Expected Value of Perfect Information (EVPI) — evpi","text":"","code":"evpi(thresholds, ...)"},{"path":"/reference/evpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Expected Value of Perfect Information (EVPI) — evpi","text":"... matrices dimension n_draws * n_thresholds containing posterior net benefit obj BayesDCAList BayesDCASurv object","code":""},{"path":"/reference/evpi_old.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Expected Value of Perfect Information (EVPI) — evpi_old","title":"Compute Expected Value of Perfect Information (EVPI) — evpi_old","text":"Compute Expected Value Perfect Information (EVPI)","code":""},{"path":"/reference/evpi_old.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Expected Value of Perfect Information (EVPI) — evpi_old","text":"","code":"evpi_old(obj, models_or_tests = NULL, type = c(\"best\", \"useful\", \"pairwise\"))"},{"path":"/reference/evpi_old.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Expected Value of Perfect Information (EVPI) — evpi_old","text":"obj BayesDCAList object models_or_tests Character vector models tests compare. null, compares either first two obj$model_or_test_names first one Treat /none (one available).","code":""},{"path":"/reference/extract_dca_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Get posterior draws from DCA stanfit — extract_dca_draws","title":"Get posterior draws from DCA stanfit — extract_dca_draws","text":"Get posterior draws DCA stanfit","code":""},{"path":"/reference/extract_dca_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get posterior draws from DCA stanfit — extract_dca_draws","text":"","code":"extract_dca_draws(fit, model_or_test_names)"},{"path":"/reference/extract_dca_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get posterior draws from DCA stanfit — extract_dca_draws","text":"fit stanfit object. model_or_test_names Vector names models binary tests assessment.","code":""},{"path":"/reference/extract_dca_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get summary from BayesDCA fit — extract_dca_summary","title":"Get summary from BayesDCA fit — extract_dca_summary","text":"Get summary BayesDCA fit","code":""},{"path":"/reference/extract_dca_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get summary from BayesDCA fit — extract_dca_summary","text":"","code":"extract_dca_summary(   fit,   model_or_test_names,   summary_probs = c(0.025, 0.975),   thresholds = seq(0.01, 0.5, 0.01) )"},{"path":"/reference/extract_dca_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get summary from BayesDCA fit — extract_dca_summary","text":"fit stanfit object. model_or_test_names Vector names models binary tests assessment. summary_probs Numeric vector giving probabilities credible interval. thresholds Vector thresholds DCA.","code":""},{"path":"/reference/get_colors_and_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get colors and labels for BayesDCA plots — get_colors_and_labels","title":"Get colors and labels for BayesDCA plots — get_colors_and_labels","text":"Get colors labels BayesDCA plots","code":""},{"path":"/reference/get_colors_and_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get colors and labels for BayesDCA plots — get_colors_and_labels","text":"","code":"get_colors_and_labels(   obj,   strategies = NULL,   colors = NULL,   labels = NULL,   all_or_none = TRUE )"},{"path":"/reference/get_colors_and_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get colors and labels for BayesDCA plots — get_colors_and_labels","text":"obj BayesDCAList object colors Named vector color model test. provided subset models tests, subset plotted. labels Named vector label model test.","code":""},{"path":"/reference/get_cutpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cutpoints for survival estimation — get_cutpoints","title":"Get cutpoints for survival estimation — get_cutpoints","text":"Get cutpoints survival estimation","code":""},{"path":"/reference/get_cutpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cutpoints for survival estimation — get_cutpoints","text":"","code":"get_cutpoints(   .prediction_time,   .event_times,   .min_events = 10,   .base_cutpoints = NULL )"},{"path":"/reference/get_cutpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cutpoints for survival estimation — get_cutpoints","text":".prediction_time time point event predicted happen .event_times times observed events (non-censored) .base_cutpoints vector cutpoints start ","code":""},{"path":"/reference/get_delta_plot_data_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get delta plot data for binary bayesDCA — get_delta_plot_data_binary","title":"Get delta plot data for binary bayesDCA — get_delta_plot_data_binary","text":"Get delta plot data binary bayesDCA","code":""},{"path":"/reference/get_delta_plot_data_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get delta plot data for binary bayesDCA — get_delta_plot_data_binary","text":"","code":"get_delta_plot_data_binary(   obj,   strategies = NULL,   type = c(\"best\", \"useful\", \"pairwise\"),   labels = NULL )"},{"path":"/reference/get_delta_plot_data_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get delta plot data for binary bayesDCA — get_delta_plot_data_binary","text":"obj BayesDCA object strategies Character vector subset decision strategies. type One \"best\", \"useful\", \"pairwise\". labels Named vector label model test.","code":""},{"path":"/reference/get_delta_plot_data_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get delta plot data for binary bayesDCA — get_delta_plot_data_binary","text":"ggplot object.","code":""},{"path":"/reference/get_delta_plot_data_surv.html","id":null,"dir":"Reference","previous_headings":"","what":"Get delta plot data for binary bayesDCA — get_delta_plot_data_surv","title":"Get delta plot data for binary bayesDCA — get_delta_plot_data_surv","text":"Get delta plot data binary bayesDCA","code":""},{"path":"/reference/get_delta_plot_data_surv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get delta plot data for binary bayesDCA — get_delta_plot_data_surv","text":"","code":"get_delta_plot_data_surv(   obj,   strategies = NULL,   type = c(\"best\", \"useful\", \"pairwise\"),   labels = NULL )"},{"path":"/reference/get_delta_plot_data_surv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get delta plot data for binary bayesDCA — get_delta_plot_data_surv","text":"obj BayesDCA object strategies Character vector subset decision strategies. type One \"best\", \"useful\", \"pairwise\". labels Named vector label model test.","code":""},{"path":"/reference/get_delta_plot_data_surv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get delta plot data for binary bayesDCA — get_delta_plot_data_surv","text":"ggplot object.","code":""},{"path":"/reference/get_events_per_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Get events per intervals defined by set of cutpoints — get_events_per_interval","title":"Get events per intervals defined by set of cutpoints — get_events_per_interval","text":"Get events per intervals defined set cutpoints","code":""},{"path":"/reference/get_events_per_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get events per intervals defined by set of cutpoints — get_events_per_interval","text":"","code":"get_events_per_interval(.cutpoints, .event_times)"},{"path":"/reference/get_events_per_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get events per intervals defined by set of cutpoints — get_events_per_interval","text":".cutpoints cutpoints defining intervals .event_times times observed events (non-censored)","code":""},{"path":"/reference/get_positivity_posterior_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get posterior parameters for positivity probability — get_positivity_posterior_parameters","title":"Get posterior parameters for positivity probability — get_positivity_posterior_parameters","text":"Get posterior parameters positivity probability","code":""},{"path":"/reference/get_positivity_posterior_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get posterior parameters for positivity probability — get_positivity_posterior_parameters","text":"","code":"get_positivity_posterior_parameters(   .prediction_data,   .thresholds,   .prior_shape1 = 1,   .prior_shape2 = 1,   .prior_only = FALSE )"},{"path":"/reference/get_positivity_posterior_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get posterior parameters for positivity probability — get_positivity_posterior_parameters","text":".prediction_data Contains prognostic model predictions .thresholds DCA thresholds. .prior_shape1 Shape 1 beta prior. .prior_shape2 Shape 2 beta prior.","code":""},{"path":"/reference/get_prior_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get prior parameters formated for Stan model — get_prior_parameters","title":"Get prior parameters formated for Stan model — get_prior_parameters","text":"Get prior parameters formated Stan model","code":""},{"path":"/reference/get_prior_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get prior parameters formated for Stan model — get_prior_parameters","text":"","code":"get_prior_parameters(   n_thresholds,   n_models_or_tests,   prior_p = NULL,   prior_se = NULL,   prior_sp = NULL )"},{"path":"/reference/get_prior_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get prior parameters formated for Stan model — get_prior_parameters","text":"n_thresholds Number thresholds (int.). n_models_or_tests Number models tests (int.). prior_p, prior_se, prior_sp Non-negative shape values Beta(alpha, beta) priors used p, Se, Sp, respectively. Default uniform prior parameters - Beta(1, 1). single vector form c(, b) can provided .","code":""},{"path":"/reference/get_prior_sample_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Get threshold-specific prior sample size or strength — get_prior_sample_size","title":"Get threshold-specific prior sample size or strength — get_prior_sample_size","text":"Get threshold-specific prior sample size strength","code":""},{"path":"/reference/get_prior_sample_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get threshold-specific prior sample size or strength — get_prior_sample_size","text":"","code":"get_prior_sample_size(   thresholds,   min_prior_sample_size = 20,   max_prior_sample_size = 100,   slope_prior_sample_size = 300 )"},{"path":"/reference/get_prior_sample_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get threshold-specific prior sample size or strength — get_prior_sample_size","text":"thresholds Decision thresholds min_prior_sample_size Minimum prior sample size strength. max_prior_sample_size Maximum prior sample size strength. slope_prior_sample_size Rate change prior sample size strength.","code":""},{"path":"/reference/get_prior_se_mu.html","id":null,"dir":"Reference","previous_headings":"","what":"Get threshold-specific mean prior sensitivity — get_prior_se_mu","title":"Get threshold-specific mean prior sensitivity — get_prior_se_mu","text":"Get threshold-specific mean prior sensitivity","code":""},{"path":"/reference/get_prior_se_mu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get threshold-specific mean prior sensitivity — get_prior_se_mu","text":"","code":"get_prior_se_mu(   thresholds,   shift = 0.45,   slope = 0.025,   .min = 0.1,   .max = 0.9 )"},{"path":"/reference/get_prior_se_mu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get threshold-specific mean prior sensitivity — get_prior_se_mu","text":"thresholds Vector decision thresholds. shift Scalar controlling height prior Sensitivity curve slope Scalar controlling shape prior Sensitivity curve .min, .max Minimum maximum prior mean","code":""},{"path":"/reference/get_prior_sp_mu.html","id":null,"dir":"Reference","previous_headings":"","what":"Get threshold-specific mean prior specificity — get_prior_sp_mu","title":"Get threshold-specific mean prior specificity — get_prior_sp_mu","text":"Get threshold-specific mean prior specificity","code":""},{"path":"/reference/get_prior_sp_mu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get threshold-specific mean prior specificity — get_prior_sp_mu","text":"","code":"get_prior_sp_mu(   thresholds,   shift = 0.45,   slope = 0.025,   .min = 0.1,   .max = 0.9 )"},{"path":"/reference/get_prior_sp_mu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get threshold-specific mean prior specificity — get_prior_sp_mu","text":"thresholds Vector decision thresholds. shift Scalar controlling height prior Specificity curve slope Scalar controlling shape prior Specificity curve .min, .max Minimum maximum prior mean","code":""},{"path":"/reference/get_superiority_prob_plot_data_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get delta plot data for binary bayesDCA — get_superiority_prob_plot_data_binary","title":"Get delta plot data for binary bayesDCA — get_superiority_prob_plot_data_binary","text":"Get delta plot data binary bayesDCA","code":""},{"path":"/reference/get_superiority_prob_plot_data_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get delta plot data for binary bayesDCA — get_superiority_prob_plot_data_binary","text":"","code":"get_superiority_prob_plot_data_binary(   obj,   min_diff = 0,   strategies = NULL,   type = c(\"best\", \"useful\", \"pairwise\"),   labels = NULL )"},{"path":"/reference/get_superiority_prob_plot_data_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get delta plot data for binary bayesDCA — get_superiority_prob_plot_data_binary","text":"obj BayesDCA object strategies Character vector subset decision strategies. type One \"best\", \"useful\", \"pairwise\". labels Named vector label model test.","code":""},{"path":"/reference/get_superiority_prob_plot_data_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get delta plot data for binary bayesDCA — get_superiority_prob_plot_data_binary","text":"ggplot object.","code":""},{"path":"/reference/get_superiority_prob_plot_data_surv.html","id":null,"dir":"Reference","previous_headings":"","what":"Get delta plot data for survival bayesDCA — get_superiority_prob_plot_data_surv","title":"Get delta plot data for survival bayesDCA — get_superiority_prob_plot_data_surv","text":"Get delta plot data survival bayesDCA","code":""},{"path":"/reference/get_superiority_prob_plot_data_surv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get delta plot data for survival bayesDCA — get_superiority_prob_plot_data_surv","text":"","code":"get_superiority_prob_plot_data_surv(   obj,   min_diff = 0,   strategies = NULL,   type = c(\"best\", \"useful\", \"pairwise\"),   labels = NULL )"},{"path":"/reference/get_superiority_prob_plot_data_surv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get delta plot data for survival bayesDCA — get_superiority_prob_plot_data_surv","text":"obj BayesDCA object min_diff Minimum difference call superior. strategies Character vector subset decision strategies. type One \"best\", \"useful\", \"pairwise\". labels Named vector label model test.","code":""},{"path":"/reference/get_superiority_prob_plot_data_surv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get delta plot data for survival bayesDCA — get_superiority_prob_plot_data_surv","text":"ggplot object.","code":""},{"path":"/reference/get_survival_posterior_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get posterior parameters for survival model — get_survival_posterior_parameters","title":"Get posterior parameters for survival model — get_survival_posterior_parameters","text":"Get posterior parameters survival model","code":""},{"path":"/reference/get_survival_posterior_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get posterior parameters for survival model — get_survival_posterior_parameters","text":"","code":"get_survival_posterior_parameters(   .prediction_data,   .surv_data,   .cutpoints,   .models_or_tests,   .thresholds,   .prior_scaling_factor,   .prior_means = NULL )"},{"path":"/reference/get_survival_posterior_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get posterior parameters for survival model — get_survival_posterior_parameters","text":".prediction_data Contains prognostic model predictions .surv_data Contains observed time event (.time column) event indicator (.status column) .cutpoints Survival cutpoints. .models_or_tests Names models tests. .thresholds DCA thresholds. .prior_scaling_factor Prior alpha = (0.69/median_surv)*.prior_scaling_factor, Prior beta = .prior_scaling_factor.","code":""},{"path":"/reference/get_survival_time_exposed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get time exposed within each interval for a given prediction time — get_survival_time_exposed","title":"Get time exposed within each interval for a given prediction time — get_survival_time_exposed","text":"Get time exposed within interval given prediction time","code":""},{"path":"/reference/get_survival_time_exposed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get time exposed within each interval for a given prediction time — get_survival_time_exposed","text":"","code":"get_survival_time_exposed(.prediction_time, .cutpoints)"},{"path":"/reference/get_survival_time_exposed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get time exposed within each interval for a given prediction time — get_survival_time_exposed","text":".prediction_time Time event prediction .cutpoints Cutpoints constant hazard interval","code":""},{"path":"/reference/get_thr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Threshold Performance Data — get_thr_data","title":"Get Threshold Performance Data — get_thr_data","text":"Get Threshold Performance Data","code":""},{"path":"/reference/get_thr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Threshold Performance Data — get_thr_data","text":"","code":"get_thr_data(outcomes, predictions, thresholds = seq(0.01, 0.5, 0.01))"},{"path":"/reference/get_thr_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Threshold Performance Data — get_thr_data","text":"outcomes Integer vector (0 1) binary outcomes. predictions Numeric vector predicted probabilities.","code":""},{"path":"/reference/get_thr_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Threshold Performance Data for DCA list — get_thr_data_list","title":"Get Threshold Performance Data for DCA list — get_thr_data_list","text":"Get Threshold Performance Data DCA list","code":""},{"path":"/reference/get_thr_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Threshold Performance Data for DCA list — get_thr_data_list","text":"","code":"get_thr_data_list(.data, thresholds = seq(0.01, 0.5, 0.01))"},{"path":"/reference/get_thr_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Threshold Performance Data for DCA list — get_thr_data_list","text":"outcomes Integer vector (0 1) binary outcomes. predictions Numeric vector predicted probabilities.","code":""},{"path":"/reference/min_events_per_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimal events per interval — min_events_per_interval","title":"Minimal events per interval — min_events_per_interval","text":"Minimal events per interval","code":""},{"path":"/reference/min_events_per_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimal events per interval — min_events_per_interval","text":"","code":"min_events_per_interval()"},{"path":"/reference/plot.BayesDCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot BayesDCA — plot.BayesDCA","title":"Plot BayesDCA — plot.BayesDCA","text":"Plot BayesDCA","code":""},{"path":"/reference/plot.BayesDCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot BayesDCA — plot.BayesDCA","text":"","code":"# S3 method for BayesDCA plot(   obj,   strategies = NULL,   colors = NULL,   labels = NULL,   raw_values = NULL,   raw_values_label = \"Biomarker threshold\",   linewidth = 1.5,   ... )"},{"path":"/reference/plot.BayesDCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot BayesDCA — plot.BayesDCA","text":"obj BayesDCA object strategies Character vector models tests plot. colors Named vector color model test. provided subset models tests, subset plotted. labels Named vector label model test. raw_values Add raw predicted values x-axis. raw_values_label Label raw values. linewidth Width plotted lines.","code":""},{"path":"/reference/plot.BayesDCAList.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot BayesDCAList — plot.BayesDCAList","title":"Plot BayesDCAList — plot.BayesDCAList","text":"Plot BayesDCAList","code":""},{"path":"/reference/plot.BayesDCAList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot BayesDCAList — plot.BayesDCAList","text":"","code":"# S3 method for BayesDCAList plot(   obj,   models_or_tests = NULL,   colors = NULL,   labels = NULL,   raw_values = NULL,   raw_values_label = \"Biomarker threshold\",   ... )"},{"path":"/reference/plot.BayesDCAList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot BayesDCAList — plot.BayesDCAList","text":"obj BayesDCAList object models_or_tests Character vector models tests compare. null, compares either first two obj$model_or_test_names first one Treat /none (one available). colors Named vector color model test. provided subset models tests, subset plotted. labels Named vector label model test.","code":""},{"path":"/reference/plot.BayesDCASurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot BayesDCASurv — plot.BayesDCASurv","title":"Plot BayesDCASurv — plot.BayesDCASurv","text":"Plot BayesDCASurv","code":""},{"path":"/reference/plot.BayesDCASurv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot BayesDCASurv — plot.BayesDCASurv","text":"","code":"# S3 method for BayesDCASurv plot(   obj,   strategies = NULL,   colors = NULL,   labels = NULL,   raw_values = NULL,   raw_values_label = \"Biomarker threshold\",   linewidth = 1.5 )"},{"path":"/reference/plot.BayesDCASurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot BayesDCASurv — plot.BayesDCASurv","text":"obj BayesDCASurv object strategies Character vector models tests plot. colors Named vector color model test. provided subset models tests, subset plotted. labels Named vector label model test. raw_values Add raw predicted values x-axis. raw_values_label Label raw values. linewidth Width plotted lines.","code":""},{"path":"/reference/plot_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot classification performance from Bayesian DCA of binary outcome — plot_classification","title":"Plot classification performance from Bayesian DCA of binary outcome — plot_classification","text":"May plot either sensitivity specificity.","code":""},{"path":"/reference/plot_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot classification performance from Bayesian DCA of binary outcome — plot_classification","text":"","code":"plot_classification(   obj,   type = c(\"sensitivity\", \"specificity\"),   models_or_tests = NULL,   colors = NULL,   labels = NULL )"},{"path":"/reference/plot_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot classification performance from Bayesian DCA of binary outcome — plot_classification","text":"obj BayesDCAList object models_or_tests Character vector models tests compare. null, compares either first two obj$model_or_test_names first one Treat /none (one available). colors Named vector color model test. provided subset models tests, subset plotted. labels Named vector label model test.","code":""},{"path":"/reference/plot_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot BayesDCA delta — plot_delta","title":"Plot BayesDCA delta — plot_delta","text":"Plot BayesDCA delta","code":""},{"path":"/reference/plot_delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot BayesDCA delta — plot_delta","text":"","code":"plot_delta(   obj,   strategies = NULL,   type = c(\"best\", \"useful\", \"pairwise\"),   colors = NULL,   labels = NULL,   linewidth = 1.5 )"},{"path":"/reference/plot_delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot BayesDCA delta — plot_delta","text":"obj BayesDCA BayesDCASurv object strategies Character vector models tests plot. null, compares either first two obj$strategies first one Treat /none (one available). type One \"best\", \"useful\", \"pairwise\". colors Named vector color model test. provided subset models tests, subset plotted. labels Named vector label model test. linewidth Width plotted lines. plot_list TRUE, returns list separate ggplot objects.","code":""},{"path":"/reference/plot_delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot BayesDCA delta — plot_delta","text":"ggplot object.","code":""},{"path":"/reference/plot_delta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot BayesDCA delta — plot_delta","text":"","code":"data(PredModelData) fit <- dca(PredModelData) plot_delta(fit)"},{"path":"/reference/plot_delta_nb.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot BayesDCAList delta — plot_delta_nb","title":"Plot BayesDCAList delta — plot_delta_nb","text":"Plot BayesDCAList delta","code":""},{"path":"/reference/plot_delta_nb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot BayesDCAList delta — plot_delta_nb","text":"","code":"plot_delta_nb(obj, models_or_tests, labels = NULL)"},{"path":"/reference/plot_delta_nb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot BayesDCAList delta — plot_delta_nb","text":"obj BayesDCAList object labels Named vector label model test. colors Named vector color model test. provided subset models tests, subset plotted.","code":""},{"path":"/reference/plot_delta_nb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot BayesDCAList delta — plot_delta_nb","text":"ggplot object.","code":""},{"path":"/reference/plot_delta_nb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot BayesDCAList delta — plot_delta_nb","text":"","code":"data(PredModelData) fit <- dca(PredModelData, cores = 4) plot_delta_nb(fit) #> Error in models_or_tests[1] %in% names(labels): argument \"models_or_tests\" is missing, with no default"},{"path":"/reference/plot_evpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Expected Value of Perfect Information (EVPI) — plot_evpi","title":"Plot Expected Value of Perfect Information (EVPI) — plot_evpi","text":"Plot Expected Value Perfect Information (EVPI)","code":""},{"path":"/reference/plot_evpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Expected Value of Perfect Information (EVPI) — plot_evpi","text":"","code":"plot_evpi(   obj,   strategies = NULL,   type = c(\"best\", \"useful\", \"pairwise\"),   colors = NULL,   labels = NULL,   linewidth = 1.5,   data_only = FALSE )"},{"path":"/reference/plot_evpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Expected Value of Perfect Information (EVPI) — plot_evpi","text":"obj BayesDCA BayesDCASurv object strategies Character vector models tests plot. null, compares either first two obj$strategies first one Treat /none (one available). type One \"best\", \"useful\", \"pairwise\". colors Named vector color model test. provided subset models tests, subset plotted. labels Named vector label model test. linewidth Width plotted lines. data_only TRUE, returns data.frame used ggplot2 plot EVPI data","code":""},{"path":"/reference/plot_ppc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot prior predictive check for BayesDCA (binary case only) — plot_ppc","title":"Plot prior predictive check for BayesDCA (binary case only) — plot_ppc","text":"Plot prior predictive check BayesDCA (binary case )","code":""},{"path":"/reference/plot_ppc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot prior predictive check for BayesDCA (binary case only) — plot_ppc","text":"","code":"plot_ppc(obj, plot_list = FALSE, n_draws = 4000, bins = 20)"},{"path":"/reference/plot_ppc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot prior predictive check for BayesDCA (binary case only) — plot_ppc","text":"obj BayesDCA object plot_list TRUE, returns list separate plot. n_draws Number prior draws use. bins Number bins use histogram prior prevalence.","code":""},{"path":"/reference/plot_ppc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot prior predictive check for BayesDCA (binary case only) — plot_ppc","text":"","code":"df <- data.frame(outcomes = 1, x = 1) # specific values don't really matter fit <- dca(df, prior_only = TRUE, threshold_varying_prior = TRUE) plot_ppc(fit)"},{"path":"/reference/plot_prob_better.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot probability of better net benefit between two models or tests — plot_prob_better","title":"Plot probability of better net benefit between two models or tests — plot_prob_better","text":"Plot probability better net benefit two models tests","code":""},{"path":"/reference/plot_prob_better.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot probability of better net benefit between two models or tests — plot_prob_better","text":"","code":"plot_prob_better(obj, models_or_tests = NULL, labels = NULL)"},{"path":"/reference/plot_prob_better.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot probability of better net benefit between two models or tests — plot_prob_better","text":"obj BayesDCAList object models_or_tests Character vector models tests compare. null, compares either first two obj$model_or_test_names first one Treat /none (one available). labels Named vector label model test. colors Named vector color model test. provided subset models tests, subset plotted.","code":""},{"path":"/reference/plot_prob_better.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot probability of better net benefit between two models or tests — plot_prob_better","text":"ggplot object.","code":""},{"path":"/reference/plot_prob_better.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot probability of better net benefit between two models or tests — plot_prob_better","text":"","code":"data(PredModelData) fit <- dca(PredModelData, cores = 4) plot_prob_better(fit)"},{"path":"/reference/plot_superiority_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot P(useful) from Wynants 2018 (doi: 10.1002/sim.7653) — plot_superiority_prob","title":"Plot P(useful) from Wynants 2018 (doi: 10.1002/sim.7653) — plot_superiority_prob","text":"Plot P(useful) Wynants 2018 (doi: 10.1002/sim.7653)","code":""},{"path":"/reference/plot_superiority_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot P(useful) from Wynants 2018 (doi: 10.1002/sim.7653) — plot_superiority_prob","text":"","code":"plot_superiority_prob(   obj,   strategies = NULL,   type = c(\"best\", \"useful\", \"pairwise\"),   min_diff = 0,   colors = NULL,   labels = NULL,   linewidth = 1.5 )"},{"path":"/reference/plot_superiority_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot P(useful) from Wynants 2018 (doi: 10.1002/sim.7653) — plot_superiority_prob","text":"obj BayesDCA BayesDCASurv object strategies Character vector models tests plot. null, compares either first two obj$strategies first one Treat /none (one available). type One \"best\", \"useful\", \"pairwise\". min_diff Minimal difference superiority. Defaults zero. Used type = \"pairwise\" colors Named vector color model test. provided subset models tests, subset plotted. labels Named vector label model test. linewidth Width plotted lines. plot_list TRUE, returns list separate ggplot objects.","code":""},{"path":"/reference/plot_superiority_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot P(useful) from Wynants 2018 (doi: 10.1002/sim.7653) — plot_superiority_prob","text":"ggplot object.","code":""},{"path":"/reference/plot_superiority_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot P(useful) from Wynants 2018 (doi: 10.1002/sim.7653) — plot_superiority_prob","text":"","code":"data(PredModelData) fit <- dca(PredModelData) plot_superiority_prob(fit)"},{"path":"/reference/print.BayesDCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Print BayesDCA — print.BayesDCA","title":"Print BayesDCA — print.BayesDCA","text":"Print BayesDCA","code":""},{"path":"/reference/print.BayesDCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print BayesDCA — print.BayesDCA","text":"","code":"# S3 method for BayesDCA print(obj, ...)"},{"path":"/reference/print.BayesDCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print BayesDCA — print.BayesDCA","text":"obj BayesDCA object","code":""},{"path":"/reference/print.BayesDCAList.html","id":null,"dir":"Reference","previous_headings":"","what":"Print BayesDCAList — print.BayesDCAList","title":"Print BayesDCAList — print.BayesDCAList","text":"Print BayesDCAList","code":""},{"path":"/reference/print.BayesDCAList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print BayesDCAList — print.BayesDCAList","text":"","code":"# S3 method for BayesDCAList print(obj, ...)"},{"path":"/reference/print.BayesDCAList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print BayesDCAList — print.BayesDCAList","text":"obj BayesDCAList object","code":""},{"path":"/reference/print.BayesDCASurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Print BayesDCASurv — print.BayesDCASurv","title":"Print BayesDCASurv — print.BayesDCASurv","text":"Print BayesDCASurv","code":""},{"path":"/reference/print.BayesDCASurv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print BayesDCASurv — print.BayesDCASurv","text":"","code":"# S3 method for BayesDCASurv print(obj, ...)"},{"path":"/reference/print.BayesDCASurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print BayesDCASurv — print.BayesDCASurv","text":"obj BayesDCASurv object","code":""},{"path":"/reference/simulate_diagnostic_test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Diagnostic Test Data — simulate_diagnostic_test_data","title":"Simulate Diagnostic Test Data — simulate_diagnostic_test_data","text":"Simulate Diagnostic Test Data","code":""},{"path":"/reference/simulate_diagnostic_test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Diagnostic Test Data — simulate_diagnostic_test_data","text":"","code":"simulate_diagnostic_test_data(   B = 100,   N = 500,   true_p = 0.2,   true_se = 0.9,   true_sp = 0.9,   keep_true_pars = FALSE )"},{"path":"/reference/simulate_diagnostic_test_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Diagnostic Test Data — simulate_diagnostic_test_data","text":"B Integer indicating number simulated datasets. N Integer indicating sample size dataset. true_p Proportion indicating true prevalence dataset. true_se Proportion indicating true sensitivity dataset. true_sp Proportion indicating true specificity dataset. keep_true_pars Logical indicating whether keep true parameter values output dataframe.","code":""},{"path":"/reference/simulate_diagnostic_test_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Diagnostic Test Data — simulate_diagnostic_test_data","text":"Bx7 data frame simulated data provided parameters.","code":""},{"path":"/reference/simulate_diagnostic_test_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Diagnostic Test Data — simulate_diagnostic_test_data","text":"Diagnostic test data simulated according following mechanism: B simulations, d diseased persons sampled binomial size N parameter true_p. , tp true positive outcomes sampled binomial size d parameter true_se, tn true negative outcomes sampled binomial size N-d parameter true_sp. simulates B diagnostic accuracy studies number diseased non-diseased persons sampled population; expected proportion diseased persons correctly detected sensitivity, number non-diseased persons correctly detected specificity.","code":""},{"path":"/reference/simulate_diagnostic_test_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Diagnostic Test Data — simulate_diagnostic_test_data","text":"","code":"d <- simulate_diagnostic_test_data(B = 2,                                    N = 1000,                                    true_p = 0.2,                                    true_se = 0.9,                                    true_sp = 0.9) #> Error in simulate_diagnostic_test_data(B = 2, N = 1000, true_p = 0.2,     true_se = 0.9, true_sp = 0.9): could not find function \"simulate_diagnostic_test_data\" head(d) #> Error in head(d): object 'd' not found"},{"path":"/reference/simulate_prognostic_model_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Prognostic Test Data — simulate_prognostic_model_data","title":"Simulate Prognostic Test Data — simulate_prognostic_model_data","text":"Simulate Prognostic Test Data","code":""},{"path":"/reference/simulate_prognostic_model_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Prognostic Test Data — simulate_prognostic_model_data","text":"","code":"simulate_prognostic_model_data(N = 200, .seed = 123)"}]
